{"version":3,"sources":["DateTime.js","owmToWi.js","WeatherIcon.js","WeatherState.js","Wind.js","api.js","requests.js","icons/svg/wi-cloud.svg","forecast/ForecastChart.js","forecast/Forecast.js","App.js","index.js"],"names":["DateAndTime","useState","DateTime","local","date","setDate","useEffect","timer","setInterval","clearInterval","className","toLocaleString","TIME_SIMPLE","DATE_MED_WITH_WEEKDAY","owmToWi","WeatherIcon","weatherCode","isDay","icon","includes","icon_night","iconClass","WeatherState","weatherText","temp","feelsLike","toFixed","Wind","dir","speed","api","axios","create","baseURL","API_KEY","city","requests","fetchCurrentWeather","fetchForecast","ForecastChart","forecast","tempArr","precArr","weatherArr","precValues","Image","src","cloudIcon","list","length","forecasts","slice","map","forecastElement","x","Date","dt","y","main","rain","snow","prec","owmIconCode","pod","icon_code_night","icon_code","getWiIconCode","weather","id","sys","data","datasets","yAxisID","type","backgroundColor","pointRadius","datalabels","display","color","font","family","size","formatter","value","context","console","log","borderColor","options","responsive","maintainAspectRatio","legend","scales","yAxes","gridLines","ticks","fontColor","stepSize","fontSize","position","max","Math","xAxes","time","unit","tooltipFormat","unitStepSize","plugins","Forecast","setForecast","a","get","request","requestInterval","App","currentWeather","setCurrentWeather","description","feels_like","sunrise","sunset","wind","deg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6df9b54f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { DateTime } from 'luxon';\nimport './DateTime.css';\n\n\nfunction DateAndTime() {\n    const [date, setDate] = useState(new DateTime.local());\n \n    useEffect(() => {\n        const timer = setInterval(()=>setDate(DateTime.local()), 1000);\n\n        return function cleanup() {\n            clearInterval(timer);\n        }\n        \n    }, []);\n\n\n    return (\n        <div className=\"datetime-container\">\n            <div className=\"datetime\">\n                <h1 className=\"datetime__time\">{date.toLocaleString(DateTime.TIME_SIMPLE)}</h1>\n                <h1 className=\"datetime__date\">{date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)}</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default DateAndTime\n","// https://gist.githubusercontent.com/tbranyen/62d974681dea8ee0caa1/raw/3405bfb2a76b7cbd90fde33d8536f0cd13706955/icons.json\n\n// todo add more icons https://openweathermap.org/weather-conditions\nlet owmToWi = \n{\n    \"200\": {\n      \"label\": \"thunderstorm with light rain\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf010\",\n      \"icon_night\": \"night-alt-storm-showers\",\n      \"icon_code_night\": \"\\uf02c\"\n    },\n    \"201\": {\n      \"label\": \"thunderstorm with rain\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf010\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"202\": {\n      \"label\": \"thunderstorm with heavy rain\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf010\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"210\": {\n      \"label\": \"light thunderstorm\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf016\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"211\": {\n      \"label\": \"thunderstorm\",\n      \"icon\": \"thunderstorm\",\n      \"icon_code\": \"\\uf016\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"212\": {\n      \"label\": \"heavy thunderstorm\",\n      \"icon\": \"thunderstorm\",\n      \"icon_code\": \"\\uf016\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"221\": {\n      \"label\": \"ragged thunderstorm\",\n      \"icon\": \"thunderstorm\",\n      \"icon_code\": \"\\uf016\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"230\": {\n      \"label\": \"thunderstorm with light drizzle\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf01e\",\n      \"icon_night\": \"\",\n      \"icon_code_night\": \"\"\n    },\n    \"231\": {\n      \"label\": \"thunderstorm with drizzle\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf01e\"\n    },\n    \"232\": {\n      \"label\": \"thunderstorm with heavy drizzle\",\n      \"icon\": \"storm-showers\",\n      \"icon_code\": \"\\uf01e\"\n    },\n    \"300\": {\n      \"label\": \"light intensity drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf01c\"\n    },\n    \"301\": {\n      \"label\": \"drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf01c\"\n    },\n    \"302\": {\n      \"label\": \"heavy intensity drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf019\"\n    },\n    \"310\": {\n      \"label\": \"light intensity drizzle rain\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"311\": {\n      \"label\": \"drizzle rain\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf019\"\n    },\n    \"312\": {\n      \"label\": \"heavy intensity drizzle rain\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf019\"\n    },\n    \"313\": {\n      \"label\": \"shower rain and drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"314\": {\n      \"label\": \"heavy shower rain and drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf019\"\n    },\n    \"321\": {\n      \"label\": \"shower drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf01c\"\n    },\n    \"321\": {\n      \"label\": \"shower drizzle\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf01c\"\n    },\n    \"500\": {\n      \"label\": \"light rain\",\n      \"icon\": \"rain\",\n      \"icon_code\": \"\\uf019\"\n    },\n    \"501\": {\n      \"label\": \"moderate rain\",\n      \"icon\": \"rain\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"502\": {\n      \"label\": \"heavy intensity rain\",\n      \"icon\": \"rain\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"503\": {\n      \"label\": \"very heavy rain\",\n      \"icon\": \"rain\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"504\": {\n      \"label\": \"extreme rain\",\n      \"icon\": \"rain\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"511\": {\n      \"label\": \"freezing rain\",\n      \"icon\": \"rain-mix\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"520\": {\n      \"label\": \"light intensity shower rain\",\n      \"icon\": \"showers\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"521\": {\n      \"label\": \"shower rain\",\n      \"icon\": \"showers\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"522\": {\n      \"label\": \"heavy intensity shower rain\",\n      \"icon\": \"showers\",\n      \"icon_code\": \"\\uf01a\"\n    },\n    \"531\": {\n      \"label\": \"ragged shower rain\",\n      \"icon\": \"showers\",\n      \"icon_code\": \"\\uf01d\"\n    },\n    \"600\": {\n      \"label\": \"light snow\",\n      \"icon\": \"snow\",\n      \"icon_code\": \"\\uf01b\"\n    },\n    \"601\": {\n      \"label\": \"snow\",\n      \"icon\": \"snow\",\n      \"icon_code\": \"\\uf01b\"\n    },\n    \"602\": {\n      \"label\": \"heavy snow\",\n      \"icon\": \"snow\",\n      \"icon_code\": \"\\uf0b5\"\n    },\n    \"611\": {\n      \"label\": \"sleet\",\n      \"icon\": \"sleet\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"612\": {\n      \"label\": \"shower sleet\",\n      \"icon\": \"sleet\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"615\": {\n      \"label\": \"light rain and snow\",\n      \"icon\": \"rain-mix\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"616\": {\n      \"label\": \"rain and snow\",\n      \"icon\": \"rain-mix\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"620\": {\n      \"label\": \"light shower snow\",\n      \"icon\": \"rain-mix\",\n      \"icon_code\": \"\\uf017\"\n    },\n    \"621\": {\n      \"label\": \"shower snow\",\n      \"icon\": \"rain-mix\",\n      \"icon_code\": \"\\uf01b\"\n    },\n    \"622\": {\n      \"label\": \"heavy shower snow\",\n      \"icon\": \"rain-mix\",\n      \"icon_code\": \"\\uf01b\"\n    },\n    \"701\": {\n      \"label\": \"mist\",\n      \"icon\": \"sprinkle\",\n      \"icon_code\": \"\\uf014\"\n    },\n    \"711\": {\n      \"label\": \"smoke\",\n      \"icon\": \"smoke\",\n      \"icon_code\": \"\\uf062\"\n    },\n    \"721\": {\n      \"label\": \"haze\",\n      \"icon\": \"day-haze\",\n      \"icon_code\": \"\\uf0b6\"\n    },\n    \"731\": {\n      \"label\": \"sand, dust whirls\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"741\": {\n      \"label\": \"fog\",\n      \"icon\": \"fog\",\n      \"icon_code\": \"\\uf014\"\n    },\n    \"751\": {\n      \"label\": \"sand\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"761\": {\n      \"label\": \"dust\",\n      \"icon\": \"dust\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"762\": {\n      \"label\": \"volcanic ash\",\n      \"icon\": \"smog\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"771\": {\n      \"label\": \"squalls\",\n      \"icon\": \"day-windy\",\n      \"icon_code\": \"\\uf011\"\n    },\n    \"781\": {\n      \"label\": \"tornado\",\n      \"icon\": \"tornado\",\n      \"icon_code\": \"\\uf056\"\n    },\n    \"800\": {\n      \"label\": \"clear sky\",\n      \"icon\": \"day-sunny\",\n      \"icon_night\": \"night-clear\",\n      \"icon_code\": \"\\uf00d\",\n      \"icon_code_night\": \"\\uf02e\",\n    },\n\n    \"801\": {\n      \"label\": \"few clouds\",\n      \"icon\": \"day-cloudy\",\n      \"icon_code\": \"\\uf002\",\n      \"icon_night\": \"night-alt-cloudy\",\n      \"icon_code_night\": \"\\uf086\"\n    },\n\n    \"802\": {\n      \"label\": \"scattered clouds\",\n      \"icon\": \"cloudy\",\n      \"icon_code\": \"\\uf002\",\n      \"icon_night\": \"night-alt-cloudy\",\n      \"icon_code_night\": \"\\uf086\"\n    },\n\n    \"803\": {\n      \"label\": \"broken clouds\",\n      \"icon\": \"cloudy\",\n      \"icon_code\": '\\uf013'\n    },\n    \n    \"804\": {\n      \"label\": \"overcast clouds\",\n      \"icon\": \"cloudy\",\n      \"icon_code\": '\\uf013'\n      },\n    \"900\": {\n      \"label\": \"tornado\",\n      \"icon\": \"tornado\",\n      \"icon_code\": \"\\uf056\"\n    },\n    \"901\": {\n      \"label\": \"tropical storm\",\n      \"icon\": \"hurricane\",\n      \"icon_code\": \"\\uf01d\"\n    },\n    \"902\": {\n      \"label\": \"hurricane\",\n      \"icon\": \"hurricane\",\n      \"icon_code\": \"\\uf073\"\n    },\n    \"903\": {\n      \"label\": \"cold\",\n      \"icon\": \"snowflake-cold\",\n      \"icon_code\": \"\\uf076\"\n    },\n    \"904\": {\n      \"label\": \"hot\",\n      \"icon\": \"hot\",\n      \"icon_code\": \"\\uf072\"\n    },\n    \"905\": {\n      \"label\": \"windy\",\n      \"icon\": \"windy\",\n      \"icon_code\": \"\\uf021\"\n    },\n    \"906\": {\n      \"label\": \"hail\",\n      \"icon\": \"hail\",\n      \"icon_code\": \"\\uf015\"\n    },\n    \"951\": {\n      \"label\": \"calm\",\n      \"icon\": \"sunny\",\n      \"icon_code\": \"\\uf00d\"\n    },\n    \"952\": {\n      \"label\": \"light breeze\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"953\": {\n      \"label\": \"gentle breeze\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"954\": {\n      \"label\": \"moderate breeze\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"955\": {\n      \"label\": \"fresh breeze\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"956\": {\n      \"label\": \"strong breeze\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"957\": {\n      \"label\": \"high wind, near gale\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf050\"\n    },\n    \"958\": {\n      \"label\": \"gale\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"959\": {\n      \"label\": \"severe gale\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    },\n    \"960\": {\n      \"label\": \"storm\",\n      \"icon\": \"thunderstorm\",\n      \"icon_code\": \"\\uf016\"\n    },\n    \"961\": {\n      \"label\": \"violent storm\",\n      \"icon\": \"thunderstorm\",\n      \"icon_code\": \"\\uf016\"\n    },\n    \"962\": {\n      \"label\": \"hurricane\",\n      \"icon\": \"cloudy-gusts\",\n      \"icon_code\": \"\\uf063\"\n    }\n  }\n\nexport default owmToWi;\n\nexport function getWiIconCode(owmIconCode, pod) {\n  // pod - part of day (d or n)\n  if (pod && pod == 'n') {\n    if (owmToWi[owmIconCode].icon_code_night) {\n      return owmToWi[owmIconCode].icon_code_night;\n    }\n  }\n\n  // day icon by default\n  return owmToWi[owmIconCode].icon_code;\n}","import React from 'react';\nimport './WeatherIcon.css';\nimport owmToWi from './owmToWi';\n\n\nfunction WeatherIcon( {weatherCode, isDay} ) {\n    // isDay =  false - night, 1 - true\n    let iconPrefix = \"wi wi-\";\n\n    let icon = '';\n    \n    if (weatherCode) {\n        icon = owmToWi[weatherCode].icon;\n\n        // for some icons use night alternative\n        if ([800, 801, 802].includes(weatherCode)) { //clear, few clouds, scattered clouds\n            if (!isDay) {\n                icon = owmToWi[weatherCode].icon_night;\n            }\n        }\n    }\n\n\n    const iconClass = iconPrefix + icon;\n\n    return (\n        <div className=\"WeatherIcon\">\n            <i className={iconClass}></i>\n        </div>\n    )\n}\n\nexport default WeatherIcon\n","import React from 'react'\nimport './icons/css/weather-icons.min.css';\nimport './WeatherState.css';\nimport WeatherIcon from './WeatherIcon';\n\nfunction WeatherState({ weatherCode, weatherText, temp, feelsLike, isDay }) {\n    \n    return (\n        <div className='weather'>\n            <div className=\"weather__description\">\n                <div className=\"weather__icon\">\n                    <WeatherIcon className=\"weather__icon\" weatherCode={weatherCode} isDay={isDay}/>\n                </div>\n                <div className=\"weather__text\">{weatherText}</div>\n            </div>\n\n            <div className=\"temperature\">\n                <div className=\"temperature__measured\">{temp ? (temp - 273.15).toFixed(0) : \"\"} {' '} °С</div>\n                <div className=\"temperature__feelslike\">Feels like {feelsLike ? (feelsLike - 273.15).toFixed(0) : \"\"}{' '}°С</div>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherState\n","import React from 'react'\nimport './Wind.css';\nimport './icons/css/weather-icons.min.css';\nimport './icons/css/weather-icons-wind.min.css';\n\nfunction Wind({dir, speed}) {\n\n\n    return (\n        <div className='wind'>\n            <div className=\"wind__icon\">\n                <i className={`wi wi-wind from-${dir}-deg`}></i>\n            </div>\n\n            <div className=\"wind__speed\">\n                {speed?.toFixed(0)} м/с\n            </div>\n        </div>\n    )\n}\n\nexport default Wind\n","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.openweathermap.org/data/2.5\",\n});\n\nexport default api;","const API_KEY = \"3a7c9da63552f741f703b56817b3e594\";\n\nconst city = \"Saint Petersburg, ru\";\n\nconst requests = {\n    fetchCurrentWeather: `weather?q=${city}&appid=${API_KEY}`,\n    fetchForecast: `forecast?q=${city}&appid=${API_KEY}`\n}\n\nexport default requests;","export default __webpack_public_path__ + \"static/media/wi-cloud.f7ed7c0e.svg\";","import React from 'react';\nimport './ForecastChart.css';\nimport { Line } from '@reactchartjs/react-chart.js';\nimport cloudIcon from '../icons/svg/wi-cloud.svg';\nimport Chart from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport owmToWi, {getWiIconCode} from '../owmToWi';\n\n\n// const dataArr = [2, 8, 3, -5, -2, -3];\n\nfunction ForecastChart({ forecast }) {\n  let tempArr = [];\n  let precArr = [];\n  let weatherArr = [];\n  // let tempValues = [];\n  let precValues = [];\n\n  let cloudImage = new Image(64, 64);\n  cloudImage.src = cloudIcon;\n  \n\n  if (forecast && forecast.list && forecast.list.length > 0) {\n    const forecasts = forecast.list.slice(0, 9);\n    \n    // console.log(forecasts);\n\n    tempArr = forecasts.map((forecastElement) => {\n      return {x: new Date(forecastElement.dt * 1000), y: (forecastElement.main.temp - 273.15).toFixed(1)}\n    })\n\n    precValues = forecasts.map((forecastElement) => {\n      let rainAmount = forecastElement.rain ? forecastElement.rain['3h'] : 0;\n      let snowAmount = forecastElement.snow ? forecastElement.snow['3h'] : 0;\n\n      return rainAmount + snowAmount;\n    })\n    \n    precArr = forecasts.map((forecastElement) => {\n      let rainAmount = forecastElement.rain ? forecastElement.rain['3h'] : 0;\n      let snowAmount = forecastElement.snow ? forecastElement.snow['3h'] : 0;\n\n      let prec = rainAmount + snowAmount;\n      return {x: new Date(forecastElement.dt * 1000), y: prec}\n    })\n\n    // dummy chart for weather icons. Use bars with zero height and add icon on top of them\n    weatherArr = forecasts.map((forecastElement) => {\n      let owmIconCode = getWiIconCode(forecastElement.weather[0]?.id, forecastElement.sys?.pod);\n      return {x: new Date(forecastElement.dt * 1000), y: 0, owmIconCode}\n    })\n\n\n    // tempValues = forecasts.map((forecastElement) => {\n    //   return (forecastElement.main.temp - 273.15).toFixed(1)\n    // });\n\n  }\n\n\n  const data = {\n    datasets: [\n      {\n        yAxisID: 'weather',\n        data: weatherArr,\n        type: 'scatter',\n        backgroundColor: 'white',\n        pointRadius: 0,\n        datalabels: {\n          display: true,\n          color: 'white',\n          font: {\n            family: 'WeatherIcons',\n            size: 30\n          },\n          formatter: (value, context) => {\n            console.log(value);\n            let iconCode = value.owmIconCode ? value.owmIconCode : '';\n            return iconCode;\n          }\n        }\n      },\n\n      {\n        yAxisID: 'temp',\n        data: tempArr,\n        borderColor: 'white',\n      },\n\n      {\n        yAxisID: 'prec',\n        data: precArr,\n        type: 'bar',\n        backgroundColor: '#004e89'\n      },\n    ],\n  }\n\n  let precMax = Math.max(1, Math.max(...precValues)); // prec upper bound at least 1\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n  \n    scales: {\n      yAxes: [\n        {\n          id: 'temp',\n          gridLines: {\n            display: false\n          },\n  \n          ticks: {\n            fontColor: 'white',\n            stepSize: 2,\n            fontSize: 16\n            // min: Math.min.apply(this, tempValues) -1,\n            // max: Math.max.apply(this, tempValues) + 1,\n            // callback: function (value, index, values) {\n            //   if (value === 0) return value;\n            //   if (index === values.length - 1) return Math.round(Math.min.apply(this, tempValues);\n            //   else if (index === 0) return Math.max.apply(this, tempValues);\n            //   else return '';\n            // },\n          }\n  \n        },\n\n        {\n          id: 'prec',\n          position: 'right',\n          gridLines: {\n            display: false\n          },\n\n          \n          ticks: {\n            max: precMax,\n            fontColor: 'white'\n          }\n        },\n\n        {\n          id: 'weather',\n          display: false,\n        }\n      ],\n  \n      xAxes: [\n        {\n          type: 'time',\n          \n          time: {\n            unit: 'hour',\n            tooltipFormat: 'lll',\n            unitStepSize: 3\n          },\n\n          gridLines: {\n            display: false\n          },\n  \n          ticks: {\n            fontColor: 'white',\n            fontSize: 16\n          }\n        }\n      ]\n    },\n\n    plugins: {\n      datalabels: {\n        display: false\n      }\n    }\n  }\n\n  return (\n    <div className=\"forecast-chart\">\n      <Line data={data} options={options} />\n    </div>\n  )\n}\n\nexport default ForecastChart\n","import React, {useState, useEffect} from 'react';\nimport api from '../api';\nimport requests from '../requests';\nimport './Forecast.css';\nimport ForecastChart from './ForecastChart';\nimport ForecastElement from './ForecastElement';\n\n\nfunction Forecast() {\n    const [forecast, setForecast] = useState({});\n\n    useEffect(() => {\n        async function fetchForecast() {\n          const request = await api.get(requests.fetchForecast);\n          console.log(request.data);\n          setForecast(request.data);\n        }\n        \n        fetchForecast();\n    \n        const requestInterval = setInterval(fetchForecast, 60000 * 5);\n        \n        return () => clearInterval(requestInterval);\n      }, [])\n    \n      // console.log(forecast);\n    \n    const getForecasts = () => {\n      if (forecast && forecast.list && forecast.list.length > 0) {\n        const forecasts = forecast.list.slice(0, 7);\n        \n        return forecasts.map((forecastElement) => {\n          return <ForecastElement \n              key={forecastElement.dt}\n              time={forecastElement.dt} \n              temp={forecastElement.main.temp} \n              weatherCode={forecastElement?.weather[0]?.id}\n            />\n        })\n      }\n    }\n\n    return (\n        // <div className='forecast'>\n        //   {getForecasts()}\n\n        // </div>\n          <ForecastChart forecast={forecast}/>\n    )\n}\n\nexport default Forecast\n","import { useState, useEffect } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport DateAndTime from './DateTime';\nimport WeatherState from './WeatherState';\nimport Wind from './Wind.js';\nimport api from './api';\nimport requests from './requests';\nimport Forecast from './forecast/Forecast';\n\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState({});\n\n  useEffect(() => {\n    async function fetchCurrentWeather() {\n      const request = await api.get(requests.fetchCurrentWeather);\n      setCurrentWeather(request.data);\n    }\n    \n    fetchCurrentWeather();\n\n    const requestInterval = setInterval(fetchCurrentWeather, 60000 * 5);\n    \n    return () => clearInterval(requestInterval);\n  }, [])\n\n  console.log(currentWeather);\n\n  return (\n    <div className=\"app\">\n      <div className=\"content\">\n        <div className=\"content__top\">\n\n          <DateAndTime />\n\n          <WeatherState \n            weatherCode={currentWeather?.weather ? currentWeather?.weather[0]?.id : null}\n            weatherText={currentWeather?.weather ? currentWeather?.weather[0]?.description : \"\"} \n            temp={currentWeather?.main?.temp}\n            feelsLike={currentWeather?.main?.feels_like}\n            isDay={currentWeather?.sys?.sunrise <= currentWeather?.dt && currentWeather?.dt < currentWeather?.sys?.sunset}\n          />\n\n          <Wind dir={currentWeather?.wind?.deg} speed={currentWeather?.wind?.speed}/>\n        </div>\n\n        <div className=\"content__bottom\">\n          <Forecast />\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}