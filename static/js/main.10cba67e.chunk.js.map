{"version":3,"sources":["DateTime.js","owmToWi.js","WeatherIcon.js","WeatherState.js","Wind.js","api.js","requests.js","forecast/ForecastElement.js","forecast/Forecast.js","App.js","index.js"],"names":["DateAndTime","useState","DateTime","local","date","setDate","useEffect","timer","setInterval","clearInterval","className","toLocaleString","TIME_SIMPLE","DATE_MED_WITH_WEEKDAY","WeatherIcon","weatherCode","iconClass","owmToWi","icon","WeatherState","temp","toFixed","Wind","dir","speed","api","axios","create","baseURL","API_KEY","city","requests","fetchCurrentWeather","fetchForecast","ForecastElement","time","fromSeconds","Forecast","forecast","setForecast","a","get","request","data","requestInterval","console","log","list","length","slice","map","forecastElement","dt","main","weather","id","getForecasts","App","currentWeather","setCurrentWeather","wind","deg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10cba67e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './DateTime.css';\r\n\r\n\r\nfunction DateAndTime() {\r\n    const [date, setDate] = useState(new DateTime.local());\r\n \r\n    useEffect(() => {\r\n        const timer = setInterval(()=>setDate(DateTime.local()), 1000);\r\n\r\n        return function cleanup() {\r\n            clearInterval(timer);\r\n        }\r\n        \r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"datetime-container\">\r\n            <div className=\"datetime\">\r\n                <h1 className=\"datetime__time\">{date.toLocaleString(DateTime.TIME_SIMPLE)}</h1>\r\n                <h1 className=\"datetime__date\">{date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateAndTime\r\n","// 20201129220526\r\n// https://gist.githubusercontent.com/tbranyen/62d974681dea8ee0caa1/raw/3405bfb2a76b7cbd90fde33d8536f0cd13706955/icons.json\r\nexport default\r\n{\r\n    \"200\": {\r\n      \"label\": \"thunderstorm with light rain\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"201\": {\r\n      \"label\": \"thunderstorm with rain\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"202\": {\r\n      \"label\": \"thunderstorm with heavy rain\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"210\": {\r\n      \"label\": \"light thunderstorm\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"211\": {\r\n      \"label\": \"thunderstorm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n    \"212\": {\r\n      \"label\": \"heavy thunderstorm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n    \"221\": {\r\n      \"label\": \"ragged thunderstorm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n    \"230\": {\r\n      \"label\": \"thunderstorm with light drizzle\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"231\": {\r\n      \"label\": \"thunderstorm with drizzle\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"232\": {\r\n      \"label\": \"thunderstorm with heavy drizzle\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n    \"300\": {\r\n      \"label\": \"light intensity drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"301\": {\r\n      \"label\": \"drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"302\": {\r\n      \"label\": \"heavy intensity drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"310\": {\r\n      \"label\": \"light intensity drizzle rain\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"311\": {\r\n      \"label\": \"drizzle rain\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"312\": {\r\n      \"label\": \"heavy intensity drizzle rain\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"313\": {\r\n      \"label\": \"shower rain and drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"314\": {\r\n      \"label\": \"heavy shower rain and drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"321\": {\r\n      \"label\": \"shower drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"500\": {\r\n      \"label\": \"light rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n    \"501\": {\r\n      \"label\": \"moderate rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n    \"502\": {\r\n      \"label\": \"heavy intensity rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n    \"503\": {\r\n      \"label\": \"very heavy rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n    \"504\": {\r\n      \"label\": \"extreme rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n    \"511\": {\r\n      \"label\": \"freezing rain\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n    \"520\": {\r\n      \"label\": \"light intensity shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n    \"521\": {\r\n      \"label\": \"shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n    \"522\": {\r\n      \"label\": \"heavy intensity shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n    \"531\": {\r\n      \"label\": \"ragged shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n    \"600\": {\r\n      \"label\": \"light snow\",\r\n      \"icon\": \"snow\"\r\n    },\r\n    \"601\": {\r\n      \"label\": \"snow\",\r\n      \"icon\": \"snow\"\r\n    },\r\n    \"602\": {\r\n      \"label\": \"heavy snow\",\r\n      \"icon\": \"snow\"\r\n    },\r\n    \"611\": {\r\n      \"label\": \"sleet\",\r\n      \"icon\": \"sleet\"\r\n    },\r\n    \"612\": {\r\n      \"label\": \"shower sleet\",\r\n      \"icon\": \"sleet\"\r\n    },\r\n    \"615\": {\r\n      \"label\": \"light rain and snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n    \"616\": {\r\n      \"label\": \"rain and snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n    \"620\": {\r\n      \"label\": \"light shower snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n    \"621\": {\r\n      \"label\": \"shower snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n    \"622\": {\r\n      \"label\": \"heavy shower snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n    \"701\": {\r\n      \"label\": \"mist\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n    \"711\": {\r\n      \"label\": \"smoke\",\r\n      \"icon\": \"smoke\"\r\n    },\r\n    \"721\": {\r\n      \"label\": \"haze\",\r\n      \"icon\": \"day-haze\"\r\n    },\r\n    \"731\": {\r\n      \"label\": \"sand, dust whirls\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"741\": {\r\n      \"label\": \"fog\",\r\n      \"icon\": \"fog\"\r\n    },\r\n    \"751\": {\r\n      \"label\": \"sand\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"761\": {\r\n      \"label\": \"dust\",\r\n      \"icon\": \"dust\"\r\n    },\r\n    \"762\": {\r\n      \"label\": \"volcanic ash\",\r\n      \"icon\": \"smog\"\r\n    },\r\n    \"771\": {\r\n      \"label\": \"squalls\",\r\n      \"icon\": \"day-windy\"\r\n    },\r\n    \"781\": {\r\n      \"label\": \"tornado\",\r\n      \"icon\": \"tornado\"\r\n    },\r\n    \"800\": {\r\n      \"label\": \"clear sky\",\r\n      \"icon\": \"day-sunny\"\r\n    },\r\n    \"801\": {\r\n      \"label\": \"few clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n    \"802\": {\r\n      \"label\": \"scattered clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n    \"803\": {\r\n      \"label\": \"broken clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n    \"804\": {\r\n      \"label\": \"overcast clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n    \"900\": {\r\n      \"label\": \"tornado\",\r\n      \"icon\": \"tornado\"\r\n    },\r\n    \"901\": {\r\n      \"label\": \"tropical storm\",\r\n      \"icon\": \"hurricane\"\r\n    },\r\n    \"902\": {\r\n      \"label\": \"hurricane\",\r\n      \"icon\": \"hurricane\"\r\n    },\r\n    \"903\": {\r\n      \"label\": \"cold\",\r\n      \"icon\": \"snowflake-cold\"\r\n    },\r\n    \"904\": {\r\n      \"label\": \"hot\",\r\n      \"icon\": \"hot\"\r\n    },\r\n    \"905\": {\r\n      \"label\": \"windy\",\r\n      \"icon\": \"windy\"\r\n    },\r\n    \"906\": {\r\n      \"label\": \"hail\",\r\n      \"icon\": \"hail\"\r\n    },\r\n    \"951\": {\r\n      \"label\": \"calm\",\r\n      \"icon\": \"sunny\"\r\n    },\r\n    \"952\": {\r\n      \"label\": \"light breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"953\": {\r\n      \"label\": \"gentle breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"954\": {\r\n      \"label\": \"moderate breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"955\": {\r\n      \"label\": \"fresh breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"956\": {\r\n      \"label\": \"strong breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"957\": {\r\n      \"label\": \"high wind, near gale\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"958\": {\r\n      \"label\": \"gale\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"959\": {\r\n      \"label\": \"severe gale\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n    \"960\": {\r\n      \"label\": \"storm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n    \"961\": {\r\n      \"label\": \"violent storm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n    \"962\": {\r\n      \"label\": \"hurricane\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    }\r\n  }","import React from 'react';\r\nimport './WeatherIcon.css';\r\nimport owmToWi from './owmToWi';\r\n\r\n\r\nfunction WeatherIcon( {weatherCode} ) {\r\n    const iconPrefix = \"wi wi-\";\r\n\r\n    let icon = weatherCode ? owmToWi[weatherCode].icon : '';\r\n    \r\n    // if (!(weatherCode > 699 && weatherCode < 800) && !(weatherCode > 899 && weatherCode < 1000)) {\r\n    //     icon = 'day-' + icon;\r\n    // }\r\n\r\n    const iconClass = iconPrefix + icon;\r\n\r\n    return (\r\n        <div className=\"WeatherIcon\">\r\n            <i className={iconClass}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherIcon\r\n","import React from 'react'\r\nimport './icons/css/weather-icons.min.css';\r\nimport './WeatherState.css';\r\nimport WeatherIcon from './WeatherIcon';\r\n\r\nfunction WeatherState({ weatherCode, temp }) {\r\n    \r\n    return (\r\n        <div className='weather'>\r\n            <div className=\"weather__icon\">\r\n                <WeatherIcon className=\"weather__icon\" weatherCode={weatherCode}/>\r\n            </div>\r\n            <div className=\"weather__temperature\">{temp ? (temp - 273.15).toFixed(0) : 0} °С</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherState\r\n","import React from 'react'\r\nimport './Wind.css';\r\nimport './icons/css/weather-icons.min.css';\r\nimport './icons/css/weather-icons-wind.min.css';\r\n\r\nfunction Wind({dir, speed}) {\r\n\r\n\r\n    return (\r\n        <div className='wind'>\r\n            <div className=\"wind__icon\">\r\n                <i className={`wi wi-wind from-${dir}-deg`}></i>\r\n            </div>\r\n\r\n            <div className=\"wind__speed\">\r\n                {speed} м/с\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wind\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport default api;","const API_KEY = \"3a7c9da63552f741f703b56817b3e594\";\r\n\r\nconst city = \"Saint Petersburg, ru\";\r\n\r\nconst requests = {\r\n    fetchCurrentWeather: `weather?q=${city}&appid=${API_KEY}`,\r\n    fetchForecast: `forecast?q=${city}&appid=${API_KEY}`\r\n}\r\n\r\nexport default requests;","import React from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './ForecastElement.css';\r\nimport WeatherIcon from '../WeatherIcon';\r\n\r\n\r\nfunction ForecastElement({ time, temp, weatherCode }) {\r\n    return (\r\n        <div className=\"forecastElement\">\r\n            <div className=\"forecastElement__icon\">\r\n                <WeatherIcon weatherCode={weatherCode}/>\r\n            </div>\r\n\r\n            <div className=\"forecastElement__time\">\r\n                {DateTime.fromSeconds(time).toLocaleString(DateTime.TIME_SIMPLE)}\r\n            </div>\r\n\r\n            <div className=\"forecastElement__temperature\">{temp ? (temp - 273.15).toFixed(0) : 0} °С</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastElement\r\n","import React, {useState, useEffect} from 'react';\r\nimport api from '../api';\r\nimport requests from '../requests';\r\nimport './Forecast.css';\r\nimport ForecastElement from './ForecastElement';\r\n\r\n\r\nfunction Forecast() {\r\n    const [forecast, setForecast] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchForecast() {\r\n          const request = await api.get(requests.fetchForecast);\r\n          setForecast(request.data);\r\n        }\r\n        \r\n        fetchForecast();\r\n    \r\n        const requestInterval = setInterval(fetchForecast, 60000 * 5);\r\n        \r\n        return () => clearInterval(requestInterval);\r\n      }, [])\r\n    \r\n      console.log(forecast);\r\n    \r\n    const getForecasts = () => {\r\n      if (forecast && forecast.list && forecast.list.length > 0) {\r\n        const forecasts = forecast.list.slice(0, 7);\r\n        \r\n        return forecasts.map((forecastElement) => {\r\n          return <ForecastElement \r\n              key={forecastElement.dt}\r\n              time={forecastElement.dt} \r\n              temp={forecastElement.main.temp} \r\n              weatherCode={forecastElement?.weather[0]?.id}\r\n            />\r\n        })\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className='forecast'>\r\n          {getForecasts()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport './DateTime';\r\nimport DateAndTime from './DateTime';\r\nimport WeatherState from './WeatherState';\r\nimport Wind from './Wind.js';\r\nimport api from './api';\r\nimport requests from './requests';\r\nimport Forecast from './forecast/Forecast';\r\n\r\n\r\nfunction App() {\r\n  const [currentWeather, setCurrentWeather] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchCurrentWeather() {\r\n      const request = await api.get(requests.fetchCurrentWeather);\r\n      setCurrentWeather(request.data);\r\n    }\r\n    \r\n    fetchCurrentWeather();\r\n\r\n    const requestInterval = setInterval(fetchCurrentWeather, 60000 * 5);\r\n    \r\n    return () => clearInterval(requestInterval);\r\n  }, [])\r\n\r\n  console.log(currentWeather);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__top\">\r\n\r\n        <DateAndTime />\r\n\r\n        <WeatherState weatherCode={currentWeather?.weather ? currentWeather?.weather[0]?.id : null} temp={currentWeather?.main?.temp}/>\r\n\r\n        <Wind dir={currentWeather?.wind?.deg} speed={currentWeather?.wind?.speed}/>\r\n      </div>\r\n\r\n      <div className=\"app__bottom\">\r\n        <Forecast />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}