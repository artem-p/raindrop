{"version":3,"sources":["Location.js","Header.js","requests.js","api.js","OwmWeatherIcon.js","common.js","Wind.js","CurrentWeather.js","forecast/OwmForecastElement.js","forecast/Owm3hForecast.js","daily-forecast/OwmDailyForecastElement.js","daily-forecast/OwmDailyForecast.js","App.js","index.js"],"names":["Location","handleLocation","status","lat","lon","name","className","onClick","Header","useState","DateTime","local","date","setDate","useEffect","timer","setInterval","clearInterval","toLocaleString","TIME_SIMPLE","DATE_MED_WITH_WEEKDAY","API_KEY","requests","fetchCurrentWeather","fetchForecast","fetchDailyForecast","api","axios","create","baseURL","OwmWeatherIcon","weatherCode","isNight","iconClass","icon","includes","kelvinToCelcius","tempKelvin","toFixed","Wind","wind","speed","dir","deg","CurrentWeather","currentWeather","setCurrentWeather","a","get","request","data","requestInterval","stationName","weatherText","weather","description","id","temp","main","feels_like","Container","fluid","Row","Col","OwmForecastElement","time","fromSeconds","Owm3hForecast","forecast","setForecast","list","length","slice","map","forecastElement","dt","getForecasts","OwmDailyForecastElement","minTemp","maxTemp","weekday","OwmDailyForecast","daily","min","max","App","setLat","setLon","locationStatus","setLocationStatus","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e47cefb8.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport './Location.css';\r\nimport { BiCurrentLocation } from 'react-icons/bi';\r\n\r\nfunction Location({handleLocation, status, lat, lon, name}) {\r\n    \r\n\r\n    \r\n    return (\r\n        <div className='location'>\r\n            <div className=\"location-button\">\r\n                <BiCurrentLocation onClick={handleLocation}/>\r\n            </div>\r\n            \r\n            <div className=\"location-info\">\r\n                {status && <p>{status}</p>}\r\n                {lat && <span>{lat}</span>}\r\n                {lon && <span>, {lon}</span>}\r\n                {name && <p>{name}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location\r\n","import React, {useState, useEffect} from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './Header.css';\r\nimport Location from './Location';\r\n\r\n\r\nfunction Header({handleLocation, status, lat, lon, name}) {\r\n    const [date, setDate] = useState(new DateTime.local());\r\n \r\n    useEffect(() => {\r\n        const timer = setInterval(()=>setDate(DateTime.local()), 1000);\r\n\r\n        return function cleanup() {\r\n            clearInterval(timer);\r\n        }\r\n        \r\n    }, []);\r\n\r\n\r\n    return (\r\n        <header className=\"header-container\">\r\n            <div className=\"location-container\">\r\n                <Location handleLocation={handleLocation} status={status} lat={lat} lon={lon} name={name}/>\r\n            </div>\r\n            <div className=\"datetime\">\r\n                <h1 className=\"datetime__time\">{date.toLocaleString(DateTime.TIME_SIMPLE)}</h1>\r\n                <h1 className=\"datetime__date\">{date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)}</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const API_KEY = \"3a7c9da63552f741f703b56817b3e594\";\r\n\r\nconst requests = {\r\n    fetchCurrentWeather: (lat, lon) => {return `weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`},\r\n    fetchForecast: (lat, lon) => {return `forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`},\r\n    fetchDailyForecast: (lat, lon) => {return `onecall?lat=${lat}&lon=${lon}&exclude=current,hourly,alerts&appid=${API_KEY}`}\r\n}\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport './weather-icons/css/weather-icons.min.css';\r\n\r\n\r\nfunction OwmWeatherIcon({weatherCode, isNight}) {\r\n    const iconPrefix = \"wi wi-owm-\";\r\n\r\n    let iconClass = '';\r\n\r\n    if (weatherCode) {\r\n        let icon = '';\r\n\r\n        icon = weatherCode;\r\n\r\n        if (isNight) {\r\n            // для некоторых значков используем ночные альтернативы.\r\n            // для большинства достаточно нейтральных, так как в дневных используется солнце, а по факту его может не быть\r\n            if ([800, 801, 802].includes(weatherCode)) { //clear, few clouds, scattered clouds\r\n                icon = '-night-' + weatherCode;\r\n            }\r\n         }\r\n\r\n        iconClass = iconPrefix + icon;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <i className={iconClass}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmWeatherIcon;\r\n","function kelvinToCelcius(tempKelvin) {\r\n    return tempKelvin ? (tempKelvin - 273.15).toFixed(0) : \"\";\r\n}\r\n\r\nexport {kelvinToCelcius};","import React from 'react';\r\nimport './Wind.css';\r\nimport './weather-icons/css/weather-icons.min.css';\r\nimport './weather-icons/css/weather-icons-wind.min.css';\r\n\r\n\r\nfunction Wind({wind}) {\r\n    const speed = wind?.speed ? wind?.speed?.toFixed(0) : 0;\r\n    const dir = wind?.deg ? wind?.deg : 0;\r\n\r\n    const iconClass = `wi wi-wind from-${dir}-deg`\r\n\r\n    return (\r\n        <div className='wind'>\r\n            <i className={iconClass}></i>{' '}<span>{speed} м/c</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wind;\r\n","import React, {useState, useEffect} from 'react';\r\nimport requests from './requests';\r\nimport api from './api';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './CurrentWeather.css';\r\nimport OwmWeatherIcon from './OwmWeatherIcon';\r\nimport { kelvinToCelcius } from './common';\r\nimport Wind from './Wind';\r\n\r\n\r\nfunction CurrentWeather({lat, lon}) {\r\n    const [currentWeather, setCurrentWeather] = useState({});\r\n\r\n    async function fetchCurrentWeather(lat, lon) {\r\n        const request = await api.get(requests.fetchCurrentWeather(lat, lon));\r\n        setCurrentWeather(request.data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCurrentWeather(lat, lon);\r\n\r\n        const requestInterval = setInterval(fetchCurrentWeather, 60000 * 5, lat, lon);\r\n    \r\n        return () => clearInterval(requestInterval);\r\n    }, [lat, lon]);\r\n    \r\n\r\n    const stationName = currentWeather?.name ? currentWeather?.name : \"Загрузка...\";\r\n    const weatherText = currentWeather?.weather ? currentWeather?.weather[0]?.description : \"\";\r\n    const weatherCode = currentWeather?.weather ? currentWeather?.weather[0]?.id : \"\";\r\n    const temp = kelvinToCelcius(currentWeather?.main?.temp);\r\n    const feelsLike = kelvinToCelcius(currentWeather?.main?.feels_like);\r\n    const wind = currentWeather?.wind;\r\n\r\n    return (\r\n        <div className='weather-card owm-current-weather'>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"station-name\">\r\n                                    {stationName}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"weather-icon\">\r\n                                    <OwmWeatherIcon weatherCode={weatherCode}/>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <div className=\"temperature__measured\">\r\n                                    {temp}{' '} <sup>°</sup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"weather-text\">\r\n                                    <h6>{weatherText}</h6>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Wind wind={wind}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './OwmForecastElement.css';\r\nimport OwmWeatherIcon from '../OwmWeatherIcon';\r\n\r\n\r\nfunction OwmForecastElement({ time, temp, weatherCode }) {\r\n    return (\r\n        <div className=\"forecast-element\">\r\n            <div className=\"forecast-element_icon\">\r\n                <OwmWeatherIcon weatherCode={weatherCode}/>\r\n            </div>\r\n\r\n            <div className=\"forecast-element_time\">\r\n                {DateTime.fromSeconds(time).toLocaleString(DateTime.TIME_SIMPLE)}\r\n            </div>\r\n\r\n            <div className=\"forecast-element_temperature\">{temp ? (temp - 273.15).toFixed(0) : 0} <sup>°</sup></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmForecastElement;","import React, {useState, useEffect} from 'react';\r\nimport api from '../api';\r\nimport requests from '../requests';\r\nimport './Owm3hForecast.css';\r\nimport OwmForecastElement from './OwmForecastElement';\r\n\r\n\r\nfunction Owm3hForecast({lat, lon}) {\r\n    const [forecast, setForecast] = useState({});\r\n\r\n    async function fetchForecast(lat, lon) {\r\n        const request = await api.get(requests.fetchForecast(lat, lon));\r\n        setForecast(request.data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchForecast(lat, lon);\r\n\r\n        const requestInterval = setInterval(fetchForecast, 60000 * 5, lat, lon);\r\n    \r\n        return () => clearInterval(requestInterval);\r\n    }, [lat, lon]);\r\n    \r\n    \r\n    const getForecasts = () => {\r\n        if (forecast && forecast.list && forecast.list.length > 0) {\r\n          const forecasts = forecast.list.slice(0, 8);\r\n          \r\n          return forecasts.map((forecastElement) => {\r\n            return <OwmForecastElement \r\n                key={forecastElement.dt}\r\n                time={forecastElement.dt} \r\n                temp={forecastElement.main.temp} \r\n                weatherCode={forecastElement?.weather[0]?.id}\r\n              />\r\n          })\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='weather-card owm-3h-forecast'>\r\n            <h5 className='header'>Прогноз на 24 ч</h5>\r\n            \r\n            <div className=\"forecast-elements\">\r\n                {getForecasts()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Owm3hForecast;\r\n","import React from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './OwmDailyForecastElement.css';\r\nimport OwmWeatherIcon from '../OwmWeatherIcon';\r\n\r\n\r\nfunction OwmDailyForecastElement({ time, minTemp, maxTemp, weatherCode }) {\r\n    return (\r\n        <div className=\"forecast-element\">\r\n            <div className=\"forecast-element_icon\">\r\n                <OwmWeatherIcon weatherCode={weatherCode}/>\r\n            </div>\r\n\r\n            <div className=\"forecast-element_time\">\r\n                {DateTime.fromSeconds(time).toLocaleString({weekday: 'short'})}\r\n            </div>\r\n\r\n            <div className=\"forecast-element_temperature\">{maxTemp}<sup>°</sup> / {minTemp}<sup>°</sup></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmDailyForecastElement;","import React, {useState, useEffect} from 'react';\r\nimport api from '../api';\r\nimport requests from '../requests';\r\nimport './OwmDailyForecast.css';\r\nimport OwmDailyForecastElement from './OwmDailyForecastElement';\r\nimport { kelvinToCelcius } from '../common';\r\n\r\n\r\nfunction OwmDailyForecast({lat, lon}) {\r\n    const [forecast, setForecast] = useState({});\r\n\r\n    async function fetchForecast(lat, lon) {\r\n        const request = await api.get(requests.fetchDailyForecast(lat, lon));\r\n        setForecast(request.data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchForecast(lat, lon);\r\n\r\n        const requestInterval = setInterval(fetchForecast, 60000 * 5, lat, lon);\r\n    \r\n        return () => clearInterval(requestInterval);\r\n    }, [lat, lon]);\r\n    \r\n    \r\n    const getForecasts = () => {\r\n        if (forecast && forecast.daily && forecast.daily.length > 0) {\r\n          const forecasts = forecast.daily.slice(0, 5);\r\n          \r\n          return forecasts.map((forecastElement) => {\r\n            return <OwmDailyForecastElement \r\n                key={forecastElement.dt}\r\n                time={forecastElement.dt} \r\n                minTemp={kelvinToCelcius(forecastElement.temp.min)}\r\n                maxTemp={kelvinToCelcius(forecastElement.temp.max)} \r\n                weatherCode={forecastElement?.weather[0]?.id}\r\n              />\r\n          })\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='weather-card owm-daily-forecast'>\r\n            <h5 className='header'>Прогноз на 5 дней</h5>\r\n\r\n            <div className=\"forecast-elements\">\r\n                {getForecasts()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmDailyForecast;\r\n","import { useState } from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport Owm3hForecast from './forecast/Owm3hForecast';\r\nimport OwmDailyForecast from './daily-forecast/OwmDailyForecast';\r\n\r\n// import Wind from './Wind.js';\r\n// import Forecast from './forecast/Forecast';\r\n// import DailyForecast from './daily-forecast/DailyForecast';\r\n// import { BiCurrentLocation } from 'react-icons/bi';\r\n\r\n\r\nfunction App() {\r\n  const [lat, setLat] = useState(59.9311);\r\n  const [lon, setLon] = useState(30.3609);\r\n  const [locationStatus, setLocationStatus] = useState(null);\r\n\r\n  \r\n  const getLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      setLocationStatus('Geolocation is not supported by your browser');\r\n    } else {\r\n      setLocationStatus('Locating...');\r\n        \r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          setLocationStatus(null);\r\n          const lat = position.coords.latitude;\r\n          const lon = position.coords.longitude;\r\n          setLat(lat);\r\n          setLon(lon);\r\n        }, () => {\r\n          setLocationStatus('Unable to retrieve your location');\r\n        });\r\n    }\r\n  }\r\n\r\n  \r\n  const handleOnClickLocation = () => {\r\n    getLocation()\r\n  }\r\n\r\n\r\n  \r\n  // async function fetchCurrentWeather(lat, lon) {\r\n  //   const request = await api.get(requests.fetchCurrentWeather(lat, lon));\r\n  //   setCurrentWeather(request.data);\r\n  // }\r\n\r\n\r\n  // useEffect(() => {\r\n  //   fetchCurrentWeather(lat, lon);\r\n\r\n  //   const requestInterval = setInterval(fetchCurrentWeather, 60000 * 5, lat, lon);\r\n    \r\n  //   return () => clearInterval(requestInterval);\r\n  // }, [lat, lon])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <Header handleLocation={handleOnClickLocation} status={locationStatus} lat={lat} lon={lon} />\r\n      </header>\r\n      <main>\r\n        <CurrentWeather lat={lat} lon={lon} />\r\n\r\n        <Owm3hForecast lat={lat} lon={lon} />\r\n\r\n        <OwmDailyForecast lat={lat} lon={lon} />\r\n      </main>\r\n    </div>\r\n  )\r\n\r\n  // return (\r\n  //   <div className=\"app\">\r\n  //     <div className=\"content\">\r\n  //       <div className=\"content__top\">\r\n\r\n  //         <Header handleLocation={handleOnClickLocation} status={locationStatus} lat={lat} lon={lon} \r\n  //           name={currentWeather?.name}/>\r\n          \r\n  //         <div className=\"center\">\r\n  //           <div>\r\n  //             <div className=\"weather__state\">\r\n  //               {/* <WeatherState \r\n  //                 weatherCode={currentWeather?.weather ? currentWeather?.weather[0]?.id : null}\r\n  //                 weatherText={currentWeather?.weather ? currentWeather?.weather[0]?.description : \"\"} \r\n  //                 temp={currentWeather?.main?.temp}\r\n  //                 feelsLike={currentWeather?.main?.feels_like}\r\n  //                 isDay={currentWeather?.sys?.sunrise <= currentWeather?.dt && currentWeather?.dt < currentWeather?.sys?.sunset}\r\n  //               /> */}\r\n  //             </div>\r\n\r\n  //               {/* <Wind dir={currentWeather?.wind?.deg} speed={currentWeather?.wind?.speed}/> */}\r\n  //           </div>\r\n\r\n  //           <div>\r\n  //             <DailyForecast />\r\n  //           </div>\r\n  //         </div>\r\n\r\n  //     </div>\r\n  //       <div className=\"content__bottom\">\r\n  //         <Forecast lat={lat} lon={lon}/>\r\n  //       </div>\r\n  //   </div>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}