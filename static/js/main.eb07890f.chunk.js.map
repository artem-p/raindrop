{"version":3,"sources":["Location.js","Header.js","requests.js","api.js","OwmWeatherIcon.js","common.js","Wind.js","CurrentWeather.js","forecast/OwmForecastElement.js","forecast/Owm3hForecast.js","daily-forecast/OwmDailyForecastElement.js","daily-forecast/OwmDailyForecast.js","App.js","index.js"],"names":["Location","handleLocation","status","lat","lon","name","className","onClick","Header","handleSelectPlace","useState","DateTime","local","date","setDate","useEffect","timer","setInterval","clearInterval","inputPlaceholder","accessToken","onSelect","showLoader","toLocaleString","TIME_SIMPLE","DATE_MED_WITH_WEEKDAY","API_KEY","requests","fetchCurrentWeather","fetchForecast","fetchDailyForecast","api","axios","create","baseURL","OwmWeatherIcon","weatherCode","isNight","iconClass","icon","includes","kelvinToCelcius","tempKelvin","toFixed","Wind","wind","speed","dir","deg","CurrentWeather","place","currentWeather","setCurrentWeather","a","get","request","data","requestInterval","stationName","weatherText","weather","description","id","temp","main","feels_like","Container","fluid","Row","Col","OwmForecastElement","time","fromSeconds","Owm3hForecast","forecast","setForecast","list","length","slice","map","forecastElement","dt","getForecasts","OwmDailyForecastElement","minTemp","maxTemp","weekday","OwmDailyForecast","daily","min","max","App","setLat","setLon","locationStatus","setLocationStatus","setPlace","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","searchResult","center","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb07890f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport './Location.css';\r\nimport { BiCurrentLocation } from 'react-icons/bi';\r\n\r\nfunction Location({handleLocation, status, lat, lon, name}) {\r\n    \r\n\r\n    \r\n    return (\r\n        <div className='location'>\r\n            <div className=\"location-button\">\r\n                <BiCurrentLocation onClick={handleLocation}/>\r\n            </div>\r\n            \r\n            <div className=\"location-info\">\r\n                {status && <p>{status}</p>}\r\n                {lat && <span>{lat}</span>}\r\n                {lon && <span>, {lon}</span>}\r\n                {name && <p>{name}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location\r\n","import React, {useState, useEffect} from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './Header.css';\r\nimport Location from './Location';\r\n\r\n// todo MatGeocoder has bunch of dependencies like mui\r\nimport MatGeocoder from 'react-mui-mapbox-geocoder'\r\n\r\n\r\n\r\nfunction Header({handleLocation, handleSelectPlace, status, lat, lon, name}) {\r\n    const MAPBOX_TOKEN = \"pk.eyJ1IjoiYXJ0ZW1wdWdhY2hldiIsImEiOiJja3l1NWJwZ3owM2IxMnd0NDUydDZqazUyIn0.b1G2XUsJEhO49s7vTH2q1Q\";\r\n    const [date, setDate] = useState(new DateTime.local());\r\n \r\n    useEffect(() => {\r\n        const timer = setInterval(()=>setDate(DateTime.local()), 1000);\r\n\r\n        return function cleanup() {\r\n            clearInterval(timer);\r\n        }\r\n        \r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div className=\"location-container\">\r\n                <Location handleLocation={handleLocation} status={status} lat={lat} lon={lon} name={name}/>\r\n            </div>\r\n\r\n            <div className=\"search-box\">\r\n                <MatGeocoder\r\n                    inputPlaceholder=\"Search Address\"\r\n                    accessToken={MAPBOX_TOKEN}\r\n                    onSelect={handleSelectPlace}\r\n                    showLoader={true}\r\n                    />\r\n            </div>\r\n            <div className=\"datetime\">\r\n                <h1 className=\"datetime__time\">{date.toLocaleString(DateTime.TIME_SIMPLE)}</h1>\r\n                <h1 className=\"datetime__date\">{date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const API_KEY = \"3a7c9da63552f741f703b56817b3e594\";\r\n\r\nconst requests = {\r\n    fetchCurrentWeather: (lat, lon) => {return `weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`},\r\n    fetchForecast: (lat, lon) => {return `forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`},\r\n    fetchDailyForecast: (lat, lon) => {return `onecall?lat=${lat}&lon=${lon}&exclude=current,hourly,alerts&appid=${API_KEY}`}\r\n}\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport './weather-icons/css/weather-icons.min.css';\r\n\r\n\r\nfunction OwmWeatherIcon({weatherCode, isNight}) {\r\n    const iconPrefix = \"wi wi-owm-\";\r\n\r\n    let iconClass = '';\r\n\r\n    if (weatherCode) {\r\n        let icon = '';\r\n\r\n        icon = weatherCode;\r\n\r\n        if (isNight) {\r\n            // для некоторых значков используем ночные альтернативы.\r\n            // для большинства достаточно нейтральных, так как в дневных используется солнце, а по факту его может не быть\r\n            if ([800, 801, 802].includes(weatherCode)) { //clear, few clouds, scattered clouds\r\n                icon = '-night-' + weatherCode;\r\n            }\r\n         }\r\n\r\n        iconClass = iconPrefix + icon;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <i className={iconClass}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmWeatherIcon;\r\n","function kelvinToCelcius(tempKelvin) {\r\n    return tempKelvin ? (tempKelvin - 273.15).toFixed(0) : \"\";\r\n}\r\n\r\nexport {kelvinToCelcius};","import React from 'react';\r\nimport './Wind.css';\r\nimport './weather-icons/css/weather-icons.min.css';\r\nimport './weather-icons/css/weather-icons-wind.min.css';\r\n\r\n\r\nfunction Wind({wind}) {\r\n    const speed = wind?.speed ? wind?.speed?.toFixed(0) : 0;\r\n    const dir = wind?.deg ? wind?.deg : 0;\r\n\r\n    const iconClass = `wi wi-wind from-${dir}-deg`\r\n\r\n    return (\r\n        <div className='wind'>\r\n            <i className={iconClass}></i>{' '}<span>{speed} м/c</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wind;\r\n","import React, {useState, useEffect} from 'react';\r\nimport requests from './requests';\r\nimport api from './api';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './CurrentWeather.css';\r\nimport OwmWeatherIcon from './OwmWeatherIcon';\r\nimport { kelvinToCelcius } from './common';\r\nimport Wind from './Wind';\r\n\r\n\r\nfunction CurrentWeather({lat, lon, place}) {\r\n    const [currentWeather, setCurrentWeather] = useState({});\r\n\r\n    async function fetchCurrentWeather(lat, lon) {\r\n        const request = await api.get(requests.fetchCurrentWeather(lat, lon));\r\n        setCurrentWeather(request.data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCurrentWeather(lat, lon);\r\n\r\n        const requestInterval = setInterval(fetchCurrentWeather, 60000 * 5, lat, lon);\r\n    \r\n        return () => clearInterval(requestInterval);\r\n    }, [lat, lon]);\r\n    \r\n\r\n    const stationName = currentWeather?.name ? currentWeather?.name : \"Загрузка...\";\r\n    const weatherText = currentWeather?.weather ? currentWeather?.weather[0]?.description : \"\";\r\n    const weatherCode = currentWeather?.weather ? currentWeather?.weather[0]?.id : \"\";\r\n    const temp = kelvinToCelcius(currentWeather?.main?.temp);\r\n    const feelsLike = kelvinToCelcius(currentWeather?.main?.feels_like);\r\n    const wind = currentWeather?.wind;\r\n\r\n    return (\r\n        <div className='weather-card owm-current-weather'>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"station-name\">\r\n                                    {place}{' '}{stationName}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"weather-icon\">\r\n                                    <OwmWeatherIcon weatherCode={weatherCode}/>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <div className=\"temperature__measured\">\r\n                                    {temp}{' '} <sup>°</sup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"weather-text\">\r\n                                    <h6>{weatherText}</h6>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Wind wind={wind}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './OwmForecastElement.css';\r\nimport OwmWeatherIcon from '../OwmWeatherIcon';\r\n\r\n\r\nfunction OwmForecastElement({ time, temp, weatherCode }) {\r\n    return (\r\n        <div className=\"forecast-element\">\r\n            <div className=\"forecast-element_icon\">\r\n                <OwmWeatherIcon weatherCode={weatherCode}/>\r\n            </div>\r\n\r\n            <div className=\"forecast-element_time\">\r\n                {DateTime.fromSeconds(time).toLocaleString(DateTime.TIME_SIMPLE)}\r\n            </div>\r\n\r\n            <div className=\"forecast-element_temperature\">{temp ? (temp - 273.15).toFixed(0) : 0} <sup>°</sup></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmForecastElement;","import React, {useState, useEffect} from 'react';\r\nimport api from '../api';\r\nimport requests from '../requests';\r\nimport './Owm3hForecast.css';\r\nimport OwmForecastElement from './OwmForecastElement';\r\n\r\n\r\nfunction Owm3hForecast({lat, lon}) {\r\n    const [forecast, setForecast] = useState({});\r\n\r\n    async function fetchForecast(lat, lon) {\r\n        const request = await api.get(requests.fetchForecast(lat, lon));\r\n        setForecast(request.data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchForecast(lat, lon);\r\n\r\n        const requestInterval = setInterval(fetchForecast, 60000 * 5, lat, lon);\r\n    \r\n        return () => clearInterval(requestInterval);\r\n    }, [lat, lon]);\r\n    \r\n    \r\n    const getForecasts = () => {\r\n        if (forecast && forecast.list && forecast.list.length > 0) {\r\n          const forecasts = forecast.list.slice(0, 8);\r\n          \r\n          return forecasts.map((forecastElement) => {\r\n            return <OwmForecastElement \r\n                key={forecastElement.dt}\r\n                time={forecastElement.dt} \r\n                temp={forecastElement.main.temp} \r\n                weatherCode={forecastElement?.weather[0]?.id}\r\n              />\r\n          })\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='weather-card owm-3h-forecast'>\r\n            <h5 className='header'>Прогноз на 24 ч</h5>\r\n            \r\n            <div className=\"forecast-elements\">\r\n                {getForecasts()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Owm3hForecast;\r\n","import React from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport './OwmDailyForecastElement.css';\r\nimport OwmWeatherIcon from '../OwmWeatherIcon';\r\n\r\n\r\nfunction OwmDailyForecastElement({ time, minTemp, maxTemp, weatherCode }) {\r\n    return (\r\n        <div className=\"forecast-element\">\r\n            <div className=\"forecast-element_icon\">\r\n                <OwmWeatherIcon weatherCode={weatherCode}/>\r\n            </div>\r\n\r\n            <div className=\"forecast-element_time\">\r\n                {DateTime.fromSeconds(time).toLocaleString({weekday: 'short'})}\r\n            </div>\r\n\r\n            <div className=\"forecast-element_temperature\">{maxTemp}<sup>°</sup> / {minTemp}<sup>°</sup></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmDailyForecastElement;","import React, {useState, useEffect} from 'react';\r\nimport api from '../api';\r\nimport requests from '../requests';\r\nimport './OwmDailyForecast.css';\r\nimport OwmDailyForecastElement from './OwmDailyForecastElement';\r\nimport { kelvinToCelcius } from '../common';\r\n\r\n\r\nfunction OwmDailyForecast({lat, lon}) {\r\n    const [forecast, setForecast] = useState({});\r\n\r\n    async function fetchForecast(lat, lon) {\r\n        const request = await api.get(requests.fetchDailyForecast(lat, lon));\r\n        setForecast(request.data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchForecast(lat, lon);\r\n\r\n        const requestInterval = setInterval(fetchForecast, 60000 * 5, lat, lon);\r\n    \r\n        return () => clearInterval(requestInterval);\r\n    }, [lat, lon]);\r\n    \r\n    \r\n    const getForecasts = () => {\r\n        if (forecast && forecast.daily && forecast.daily.length > 0) {\r\n          const forecasts = forecast.daily.slice(0, 5);\r\n          \r\n          return forecasts.map((forecastElement) => {\r\n            return <OwmDailyForecastElement \r\n                key={forecastElement.dt}\r\n                time={forecastElement.dt} \r\n                minTemp={kelvinToCelcius(forecastElement.temp.min)}\r\n                maxTemp={kelvinToCelcius(forecastElement.temp.max)} \r\n                weatherCode={forecastElement?.weather[0]?.id}\r\n              />\r\n          })\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='weather-card owm-daily-forecast'>\r\n            <h5 className='header'>Прогноз на 5 дней</h5>\r\n\r\n            <div className=\"forecast-elements\">\r\n                {getForecasts()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwmDailyForecast;\r\n","import { useState } from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport Owm3hForecast from './forecast/Owm3hForecast';\r\nimport OwmDailyForecast from './daily-forecast/OwmDailyForecast';\r\n\r\n\r\n// import Wind from './Wind.js';\r\n// import Forecast from './forecast/Forecast';\r\n// import DailyForecast from './daily-forecast/DailyForecast';\r\n// import { BiCurrentLocation } from 'react-icons/bi';\r\n\r\n\r\nfunction App() {\r\n  const [lat, setLat] = useState(59.9311);\r\n  const [lon, setLon] = useState(30.3609);\r\n  const [locationStatus, setLocationStatus] = useState(null);\r\n  const [place, setPlace] = useState('');\r\n\r\n  \r\n  const getLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      setLocationStatus('Geolocation is not supported by your browser');\r\n    } else {\r\n      setLocationStatus('Locating...');\r\n        \r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          setLocationStatus(null);\r\n          const lat = position.coords.latitude;\r\n          const lon = position.coords.longitude;\r\n          setLat(lat);\r\n          setLon(lon);\r\n        }, () => {\r\n          setLocationStatus('Unable to retrieve your location');\r\n        });\r\n    }\r\n  }\r\n\r\n  \r\n  const handleOnClickLocation = () => {\r\n    setPlace('');\r\n    getLocation()\r\n  }\r\n\r\n  \r\n  const handleSelectPlace = (searchResult) => {\r\n    setLat(searchResult?.center[1]);\r\n    setLon(searchResult?.center[0]);\r\n    setPlace(searchResult?.text);\r\n  }\r\n\r\n\r\n  \r\n  // async function fetchCurrentWeather(lat, lon) {\r\n  //   const request = await api.get(requests.fetchCurrentWeather(lat, lon));\r\n  //   setCurrentWeather(request.data);\r\n  // }\r\n\r\n\r\n  // useEffect(() => {\r\n  //   fetchCurrentWeather(lat, lon);\r\n\r\n  //   const requestInterval = setInterval(fetchCurrentWeather, 60000 * 5, lat, lon);\r\n    \r\n  //   return () => clearInterval(requestInterval);\r\n  // }, [lat, lon])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <Header handleLocation={handleOnClickLocation} handleSelectPlace={handleSelectPlace} status={locationStatus} lat={lat} lon={lon} />\r\n      </header>\r\n      <main>\r\n        <CurrentWeather lat={lat} lon={lon} place={place}/>\r\n\r\n        <Owm3hForecast lat={lat} lon={lon} />\r\n\r\n        <OwmDailyForecast lat={lat} lon={lon} />\r\n      </main>\r\n    </div>\r\n  )\r\n\r\n  // return (\r\n  //   <div className=\"app\">\r\n  //     <div className=\"content\">\r\n  //       <div className=\"content__top\">\r\n\r\n  //         <Header handleLocation={handleOnClickLocation} status={locationStatus} lat={lat} lon={lon} \r\n  //           name={currentWeather?.name}/>\r\n          \r\n  //         <div className=\"center\">\r\n  //           <div>\r\n  //             <div className=\"weather__state\">\r\n  //               {/* <WeatherState \r\n  //                 weatherCode={currentWeather?.weather ? currentWeather?.weather[0]?.id : null}\r\n  //                 weatherText={currentWeather?.weather ? currentWeather?.weather[0]?.description : \"\"} \r\n  //                 temp={currentWeather?.main?.temp}\r\n  //                 feelsLike={currentWeather?.main?.feels_like}\r\n  //                 isDay={currentWeather?.sys?.sunrise <= currentWeather?.dt && currentWeather?.dt < currentWeather?.sys?.sunset}\r\n  //               /> */}\r\n  //             </div>\r\n\r\n  //               {/* <Wind dir={currentWeather?.wind?.deg} speed={currentWeather?.wind?.speed}/> */}\r\n  //           </div>\r\n\r\n  //           <div>\r\n  //             <DailyForecast />\r\n  //           </div>\r\n  //         </div>\r\n\r\n  //     </div>\r\n  //       <div className=\"content__bottom\">\r\n  //         <Forecast lat={lat} lon={lon}/>\r\n  //       </div>\r\n  //   </div>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}